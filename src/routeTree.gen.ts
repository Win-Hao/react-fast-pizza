/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as MenuImport } from './pages/menu'
import { Route as CartImport } from './pages/cart'
import { Route as IndexImport } from './pages/index'
import { Route as OrderNewImport } from './pages/order/new'
import { Route as OrderOrderIdImport } from './pages/order/$orderId'

// Create/Update Routes

const MenuRoute = MenuImport.update({
  id: '/menu',
  path: '/menu',
  getParentRoute: () => rootRoute,
} as any)

const CartRoute = CartImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OrderNewRoute = OrderNewImport.update({
  id: '/order/new',
  path: '/order/new',
  getParentRoute: () => rootRoute,
} as any)

const OrderOrderIdRoute = OrderOrderIdImport.update({
  id: '/order/$orderId',
  path: '/order/$orderId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartImport
      parentRoute: typeof rootRoute
    }
    '/menu': {
      id: '/menu'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuImport
      parentRoute: typeof rootRoute
    }
    '/order/$orderId': {
      id: '/order/$orderId'
      path: '/order/$orderId'
      fullPath: '/order/$orderId'
      preLoaderRoute: typeof OrderOrderIdImport
      parentRoute: typeof rootRoute
    }
    '/order/new': {
      id: '/order/new'
      path: '/order/new'
      fullPath: '/order/new'
      preLoaderRoute: typeof OrderNewImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cart': typeof CartRoute
  '/menu': typeof MenuRoute
  '/order/$orderId': typeof OrderOrderIdRoute
  '/order/new': typeof OrderNewRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cart': typeof CartRoute
  '/menu': typeof MenuRoute
  '/order/$orderId': typeof OrderOrderIdRoute
  '/order/new': typeof OrderNewRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/cart': typeof CartRoute
  '/menu': typeof MenuRoute
  '/order/$orderId': typeof OrderOrderIdRoute
  '/order/new': typeof OrderNewRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/cart' | '/menu' | '/order/$orderId' | '/order/new'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/cart' | '/menu' | '/order/$orderId' | '/order/new'
  id: '__root__' | '/' | '/cart' | '/menu' | '/order/$orderId' | '/order/new'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CartRoute: typeof CartRoute
  MenuRoute: typeof MenuRoute
  OrderOrderIdRoute: typeof OrderOrderIdRoute
  OrderNewRoute: typeof OrderNewRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CartRoute: CartRoute,
  MenuRoute: MenuRoute,
  OrderOrderIdRoute: OrderOrderIdRoute,
  OrderNewRoute: OrderNewRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/cart",
        "/menu",
        "/order/$orderId",
        "/order/new"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/cart": {
      "filePath": "cart.tsx"
    },
    "/menu": {
      "filePath": "menu.tsx"
    },
    "/order/$orderId": {
      "filePath": "order/$orderId.tsx"
    },
    "/order/new": {
      "filePath": "order/new.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
